// Generated by CoffeeScript 1.6.2
(function() {
  var Chaplin, Controller, HeaderView, Navigation, NavigationView, SiteView, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Chaplin = require('chaplin');

  SiteView = require('views/site-view');

  HeaderView = require('views/header-view');

  Navigation = require('models/navigation');

  NavigationView = require('views/navigation-view');

  module.exports = Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      _ref = Controller.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Controller.prototype.beforeAction = {
      '.*': function(params, route) {
        var _ref1;

        this.compose('site', SiteView);
        this.compose('header', HeaderView);
        this.compose('auth', function() {
          var SessionController;

          SessionController = require('controllers/session-controller');
          return this.controller = new SessionController;
        });
        if ((_ref1 = route.name) === 'users#show' || _ref1 === 'repos#show' || _ref1 === 'topics#show') {
          return this.compose('navigation', function() {
            this.model = new Navigation;
            return this.view = new NavigationView({
              model: this.model
            });
          });
        }
      }
    };

    return Controller;

  })(Chaplin.Controller);

}).call(this);
