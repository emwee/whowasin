// Generated by CoffeeScript 1.6.2
(function() {
  var UserRepoSyncView, View, template, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('views/base/view');

  template = require('./templates/user-repo-sync');

  module.exports = UserRepoSyncView = (function(_super) {
    __extends(UserRepoSyncView, _super);

    function UserRepoSyncView() {
      this.sync = __bind(this.sync, this);      _ref = UserRepoSyncView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    UserRepoSyncView.prototype.autoRender = true;

    UserRepoSyncView.prototype.className = 'user-repo-sync';

    UserRepoSyncView.prototype.events = {
      'click .user-repo-sync-button': 'sync'
    };

    UserRepoSyncView.prototype.listen = {
      'loginStatus mediator': 'render'
    };

    UserRepoSyncView.prototype.template = template;

    UserRepoSyncView.prototype.initialize = function(args) {
      UserRepoSyncView.__super__.initialize.apply(this, arguments);
      return this.login = args.login;
    };

    UserRepoSyncView.prototype.getTemplateData = function() {
      var obj;

      obj = UserRepoSyncView.__super__.getTemplateData.apply(this, arguments);
      obj.login = this.login;
      return obj;
    };

    UserRepoSyncView.prototype.sync = function(event) {
      var $button,
        _this = this;

      $button = $(event.currentTarget);
      if ($button.attr('disabled')) {
        return;
      }
      $button.attr('disabled', 'disabled');
      return this.collection.fetch().done(function() {
        $button.removeAttr('disabled');
        return _this.trigger('sync');
      });
    };

    return UserRepoSyncView;

  })(View);

}).call(this);
