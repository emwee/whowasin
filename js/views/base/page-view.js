// Generated by CoffeeScript 1.6.2
(function() {
  var PageView, View, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('views/base/view');

  module.exports = PageView = (function(_super) {
    __extends(PageView, _super);

    function PageView() {
      _ref = PageView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    PageView.prototype.region = 'main';

    PageView.prototype.renderedSubviews = false;

    PageView.prototype.initialize = function() {
      var modelOrCollection, rendered,
        _this = this;

      PageView.__super__.initialize.apply(this, arguments);
      modelOrCollection = this.model || this.collection;
      if (modelOrCollection) {
        rendered = false;
        return this.listenTo(modelOrCollection, 'change', function() {
          if (!rendered) {
            _this.render();
          }
          return rendered = true;
        });
      }
    };

    PageView.prototype.getNavigationData = function() {
      return {};
    };

    PageView.prototype.renderSubviews = function() {};

    PageView.prototype.render = function() {
      PageView.__super__.render.apply(this, arguments);
      if (!this.renderedSubviews) {
        this.renderSubviews();
        this.renderedSubviews = true;
      }
      return this.publishEvent('navigation:change', this.getNavigationData());
    };

    return PageView;

  })(View);

}).call(this);
