// Generated by CoffeeScript 1.6.2
(function() {
  var Model, Post, Repo, Topic, User, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = require('models/base/model');

  User = require('models/user');

  Repo = require('models/repo');

  Topic = require('models/topic');

  module.exports = Post = (function(_super) {
    __extends(Post, _super);

    function Post() {
      _ref = Post.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Post.prototype.urlPath = function() {
      return "/users/" + (this.get('topic').get('repo').get('user').get('login')) + "/repos/" + (this.get('topic').get('repo').get('name')) + "/topics/" + (this.get('topic').get('number')) + "/posts/";
    };

    Post.prototype.parse = function(response) {
      var repo, repoUser, topic, user;

      if (response != null) {
        repoUser = new User(_.extend(response.topic.repo.user, {}));
        repo = new Repo(_.extend(response.topic.repo, {
          user: repoUser
        }));
        topic = new Topic(_.extend(response.topic, {
          repo: repo
        }));
        user = new User(_.extend(response.user, {}));
        return _.extend(response, {
          topic: topic
        });
      }
    };

    return Post;

  })(Model);

}).call(this);
